// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: transactions/v1/transactions.proto

package transactionsv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TransferCode int32

const (
	TransferCode_UnusedTransferCode             TransferCode = 0
	TransferCode_Unknown                        TransferCode = 1
	TransferCode_Legacy                         TransferCode = 2
	TransferCode_Deposit                        TransferCode = 3
	TransferCode_DepositRefund                  TransferCode = 4
	TransferCode_Withdraw                       TransferCode = 5
	TransferCode_WithdrawRefund                 TransferCode = 6
	TransferCode_SupsPurchase                   TransferCode = 7
	TransferCode_SupsPurchaseRefund             TransferCode = 8
	TransferCode_StorePurchase                  TransferCode = 9
	TransferCode_StorePurchaseRefund            TransferCode = 10
	TransferCode_AssetTransferFee               TransferCode = 11
	TransferCode_AssetTransferFeeRefund         TransferCode = 12
	TransferCode_SupremacyStorePurchase         TransferCode = 13
	TransferCode_SupremacyStoreRefund           TransferCode = 14
	TransferCode_SupremacyMarketplace           TransferCode = 15
	TransferCode_SupremacySyndicate             TransferCode = 16
	TransferCode_SupremacySyndicateRefund       TransferCode = 17
	TransferCode_SupremacyBattle                TransferCode = 18
	TransferCode_SupremacyBattleRefund          TransferCode = 19
	TransferCode_SupremacyBattleReward          TransferCode = 20
	TransferCode_SupremacyBattleLobbyFee        TransferCode = 21
	TransferCode_SupremacyBattleLobbyFeeRefund  TransferCode = 22
	TransferCode_SupremacyBattleLobbyJoin       TransferCode = 23
	TransferCode_SupremacyBattleLobbyJoinRefund TransferCode = 24
	TransferCode_Coupon                         TransferCode = 25
	TransferCode_SupremacyMarketplaceBuy        TransferCode = 26
	TransferCode_SupremacyMarketplaceBuyRefund  TransferCode = 27
	TransferCode_SupremacyMarketplaceBid        TransferCode = 28
	TransferCode_SupremacyMarketplaceBidRefund  TransferCode = 29
	TransferCode_SupremacyRepair                TransferCode = 30
	TransferCode_SupremacyRepairRefund          TransferCode = 31
	TransferCode_SupremacyNotification          TransferCode = 32
	TransferCode_SupremacyNotificationRefund    TransferCode = 33
	TransferCode_SupremacyMarketplaceFee        TransferCode = 34
	TransferCode_SupremacyMarketplaceFeeRefund  TransferCode = 35
)

// Enum value maps for TransferCode.
var (
	TransferCode_name = map[int32]string{
		0:  "UnusedTransferCode",
		1:  "Unknown",
		2:  "Legacy",
		3:  "Deposit",
		4:  "DepositRefund",
		5:  "Withdraw",
		6:  "WithdrawRefund",
		7:  "SupsPurchase",
		8:  "SupsPurchaseRefund",
		9:  "StorePurchase",
		10: "StorePurchaseRefund",
		11: "AssetTransferFee",
		12: "AssetTransferFeeRefund",
		13: "SupremacyStorePurchase",
		14: "SupremacyStoreRefund",
		15: "SupremacyMarketplace",
		16: "SupremacySyndicate",
		17: "SupremacySyndicateRefund",
		18: "SupremacyBattle",
		19: "SupremacyBattleRefund",
		20: "SupremacyBattleReward",
		21: "SupremacyBattleLobbyFee",
		22: "SupremacyBattleLobbyFeeRefund",
		23: "SupremacyBattleLobbyJoin",
		24: "SupremacyBattleLobbyJoinRefund",
		25: "Coupon",
		26: "SupremacyMarketplaceBuy",
		27: "SupremacyMarketplaceBuyRefund",
		28: "SupremacyMarketplaceBid",
		29: "SupremacyMarketplaceBidRefund",
		30: "SupremacyRepair",
		31: "SupremacyRepairRefund",
		32: "SupremacyNotification",
		33: "SupremacyNotificationRefund",
		34: "SupremacyMarketplaceFee",
		35: "SupremacyMarketplaceFeeRefund",
	}
	TransferCode_value = map[string]int32{
		"UnusedTransferCode":             0,
		"Unknown":                        1,
		"Legacy":                         2,
		"Deposit":                        3,
		"DepositRefund":                  4,
		"Withdraw":                       5,
		"WithdrawRefund":                 6,
		"SupsPurchase":                   7,
		"SupsPurchaseRefund":             8,
		"StorePurchase":                  9,
		"StorePurchaseRefund":            10,
		"AssetTransferFee":               11,
		"AssetTransferFeeRefund":         12,
		"SupremacyStorePurchase":         13,
		"SupremacyStoreRefund":           14,
		"SupremacyMarketplace":           15,
		"SupremacySyndicate":             16,
		"SupremacySyndicateRefund":       17,
		"SupremacyBattle":                18,
		"SupremacyBattleRefund":          19,
		"SupremacyBattleReward":          20,
		"SupremacyBattleLobbyFee":        21,
		"SupremacyBattleLobbyFeeRefund":  22,
		"SupremacyBattleLobbyJoin":       23,
		"SupremacyBattleLobbyJoinRefund": 24,
		"Coupon":                         25,
		"SupremacyMarketplaceBuy":        26,
		"SupremacyMarketplaceBuyRefund":  27,
		"SupremacyMarketplaceBid":        28,
		"SupremacyMarketplaceBidRefund":  29,
		"SupremacyRepair":                30,
		"SupremacyRepairRefund":          31,
		"SupremacyNotification":          32,
		"SupremacyNotificationRefund":    33,
		"SupremacyMarketplaceFee":        34,
		"SupremacyMarketplaceFeeRefund":  35,
	}
)

func (x TransferCode) Enum() *TransferCode {
	p := new(TransferCode)
	*p = x
	return p
}

func (x TransferCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TransferCode) Descriptor() protoreflect.EnumDescriptor {
	return file_transactions_v1_transactions_proto_enumTypes[0].Descriptor()
}

func (TransferCode) Type() protoreflect.EnumType {
	return &file_transactions_v1_transactions_proto_enumTypes[0]
}

func (x TransferCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TransferCode.Descriptor instead.
func (TransferCode) EnumDescriptor() ([]byte, []int) {
	return file_transactions_v1_transactions_proto_rawDescGZIP(), []int{0}
}

type Ledger int32

const (
	Ledger_UnusedLedgerCode Ledger = 0
	Ledger_SUPS             Ledger = 1
)

// Enum value maps for Ledger.
var (
	Ledger_name = map[int32]string{
		0: "UnusedLedgerCode",
		1: "SUPS",
	}
	Ledger_value = map[string]int32{
		"UnusedLedgerCode": 0,
		"SUPS":             1,
	}
)

func (x Ledger) Enum() *Ledger {
	p := new(Ledger)
	*p = x
	return p
}

func (x Ledger) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Ledger) Descriptor() protoreflect.EnumDescriptor {
	return file_transactions_v1_transactions_proto_enumTypes[1].Descriptor()
}

func (Ledger) Type() protoreflect.EnumType {
	return &file_transactions_v1_transactions_proto_enumTypes[1]
}

func (x Ledger) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Ledger.Descriptor instead.
func (Ledger) EnumDescriptor() ([]byte, []int) {
	return file_transactions_v1_transactions_proto_rawDescGZIP(), []int{1}
}

type AccountCode int32

const (
	AccountCode_AccountUnknown AccountCode = 0
	AccountCode_AccountReserve AccountCode = 1
	AccountCode_AccountSystem  AccountCode = 2
	AccountCode_AccountUser    AccountCode = 3
	AccountCode_AccountBot     AccountCode = 4
)

// Enum value maps for AccountCode.
var (
	AccountCode_name = map[int32]string{
		0: "AccountUnknown",
		1: "AccountReserve",
		2: "AccountSystem",
		3: "AccountUser",
		4: "AccountBot",
	}
	AccountCode_value = map[string]int32{
		"AccountUnknown": 0,
		"AccountReserve": 1,
		"AccountSystem":  2,
		"AccountUser":    3,
		"AccountBot":     4,
	}
)

func (x AccountCode) Enum() *AccountCode {
	p := new(AccountCode)
	*p = x
	return p
}

func (x AccountCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AccountCode) Descriptor() protoreflect.EnumDescriptor {
	return file_transactions_v1_transactions_proto_enumTypes[2].Descriptor()
}

func (AccountCode) Type() protoreflect.EnumType {
	return &file_transactions_v1_transactions_proto_enumTypes[2]
}

func (x AccountCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AccountCode.Descriptor instead.
func (AccountCode) EnumDescriptor() ([]byte, []int) {
	return file_transactions_v1_transactions_proto_rawDescGZIP(), []int{2}
}

type Account struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId        string      `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Ledger        Ledger      `protobuf:"varint,3,opt,name=ledger,proto3,enum=transactions.v1.Ledger" json:"ledger,omitempty"`
	Code          AccountCode `protobuf:"varint,4,opt,name=code,proto3,enum=transactions.v1.AccountCode" json:"code,omitempty"`
	DebitsPosted  string      `protobuf:"bytes,5,opt,name=debits_posted,json=debitsPosted,proto3" json:"debits_posted,omitempty"`
	CreditsPosted string      `protobuf:"bytes,6,opt,name=credits_posted,json=creditsPosted,proto3" json:"credits_posted,omitempty"`
	Balance       string      `protobuf:"bytes,8,opt,name=balance,proto3" json:"balance,omitempty"`
	CreatedAt     int64       `protobuf:"varint,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *Account) Reset() {
	*x = Account{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transactions_v1_transactions_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Account) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Account) ProtoMessage() {}

func (x *Account) ProtoReflect() protoreflect.Message {
	mi := &file_transactions_v1_transactions_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Account.ProtoReflect.Descriptor instead.
func (*Account) Descriptor() ([]byte, []int) {
	return file_transactions_v1_transactions_proto_rawDescGZIP(), []int{0}
}

func (x *Account) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Account) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Account) GetLedger() Ledger {
	if x != nil {
		return x.Ledger
	}
	return Ledger_UnusedLedgerCode
}

func (x *Account) GetCode() AccountCode {
	if x != nil {
		return x.Code
	}
	return AccountCode_AccountUnknown
}

func (x *Account) GetDebitsPosted() string {
	if x != nil {
		return x.DebitsPosted
	}
	return ""
}

func (x *Account) GetCreditsPosted() string {
	if x != nil {
		return x.CreditsPosted
	}
	return ""
}

func (x *Account) GetBalance() string {
	if x != nil {
		return x.Balance
	}
	return ""
}

func (x *Account) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

type MigrationTransfer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreditUserId    string       `protobuf:"bytes,2,opt,name=credit_user_id,json=creditUserId,proto3" json:"credit_user_id,omitempty"`
	CreditAccountId string       `protobuf:"bytes,3,opt,name=credit_account_id,json=creditAccountId,proto3" json:"credit_account_id,omitempty"`
	DebitUserId     string       `protobuf:"bytes,4,opt,name=debit_user_id,json=debitUserId,proto3" json:"debit_user_id,omitempty"`
	DebitAccountId  string       `protobuf:"bytes,5,opt,name=debit_account_id,json=debitAccountId,proto3" json:"debit_account_id,omitempty"`
	Amount          string       `protobuf:"bytes,6,opt,name=amount,proto3" json:"amount,omitempty"`
	Ledger          Ledger       `protobuf:"varint,7,opt,name=ledger,proto3,enum=transactions.v1.Ledger" json:"ledger,omitempty"`
	Code            TransferCode `protobuf:"varint,8,opt,name=code,proto3,enum=transactions.v1.TransferCode" json:"code,omitempty"`
	Timestamp       int64        `protobuf:"varint,9,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *MigrationTransfer) Reset() {
	*x = MigrationTransfer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transactions_v1_transactions_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MigrationTransfer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MigrationTransfer) ProtoMessage() {}

func (x *MigrationTransfer) ProtoReflect() protoreflect.Message {
	mi := &file_transactions_v1_transactions_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MigrationTransfer.ProtoReflect.Descriptor instead.
func (*MigrationTransfer) Descriptor() ([]byte, []int) {
	return file_transactions_v1_transactions_proto_rawDescGZIP(), []int{1}
}

func (x *MigrationTransfer) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MigrationTransfer) GetCreditUserId() string {
	if x != nil {
		return x.CreditUserId
	}
	return ""
}

func (x *MigrationTransfer) GetCreditAccountId() string {
	if x != nil {
		return x.CreditAccountId
	}
	return ""
}

func (x *MigrationTransfer) GetDebitUserId() string {
	if x != nil {
		return x.DebitUserId
	}
	return ""
}

func (x *MigrationTransfer) GetDebitAccountId() string {
	if x != nil {
		return x.DebitAccountId
	}
	return ""
}

func (x *MigrationTransfer) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *MigrationTransfer) GetLedger() Ledger {
	if x != nil {
		return x.Ledger
	}
	return Ledger_UnusedLedgerCode
}

func (x *MigrationTransfer) GetCode() TransferCode {
	if x != nil {
		return x.Code
	}
	return TransferCode_UnusedTransferCode
}

func (x *MigrationTransfer) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type CompletedTransfer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreditUserId    string       `protobuf:"bytes,2,opt,name=credit_user_id,json=creditUserId,proto3" json:"credit_user_id,omitempty"`
	CreditAccountId string       `protobuf:"bytes,3,opt,name=credit_account_id,json=creditAccountId,proto3" json:"credit_account_id,omitempty"`
	DebitUserId     string       `protobuf:"bytes,4,opt,name=debit_user_id,json=debitUserId,proto3" json:"debit_user_id,omitempty"`
	DebitAccountId  string       `protobuf:"bytes,5,opt,name=debit_account_id,json=debitAccountId,proto3" json:"debit_account_id,omitempty"`
	Amount          string       `protobuf:"bytes,6,opt,name=amount,proto3" json:"amount,omitempty"`
	Ledger          Ledger       `protobuf:"varint,7,opt,name=ledger,proto3,enum=transactions.v1.Ledger" json:"ledger,omitempty"`
	Code            TransferCode `protobuf:"varint,8,opt,name=code,proto3,enum=transactions.v1.TransferCode" json:"code,omitempty"`
	Timestamp       int64        `protobuf:"varint,9,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *CompletedTransfer) Reset() {
	*x = CompletedTransfer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transactions_v1_transactions_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompletedTransfer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompletedTransfer) ProtoMessage() {}

func (x *CompletedTransfer) ProtoReflect() protoreflect.Message {
	mi := &file_transactions_v1_transactions_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompletedTransfer.ProtoReflect.Descriptor instead.
func (*CompletedTransfer) Descriptor() ([]byte, []int) {
	return file_transactions_v1_transactions_proto_rawDescGZIP(), []int{2}
}

func (x *CompletedTransfer) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CompletedTransfer) GetCreditUserId() string {
	if x != nil {
		return x.CreditUserId
	}
	return ""
}

func (x *CompletedTransfer) GetCreditAccountId() string {
	if x != nil {
		return x.CreditAccountId
	}
	return ""
}

func (x *CompletedTransfer) GetDebitUserId() string {
	if x != nil {
		return x.DebitUserId
	}
	return ""
}

func (x *CompletedTransfer) GetDebitAccountId() string {
	if x != nil {
		return x.DebitAccountId
	}
	return ""
}

func (x *CompletedTransfer) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *CompletedTransfer) GetLedger() Ledger {
	if x != nil {
		return x.Ledger
	}
	return Ledger_UnusedLedgerCode
}

func (x *CompletedTransfer) GetCode() TransferCode {
	if x != nil {
		return x.Code
	}
	return TransferCode_UnusedTransferCode
}

func (x *CompletedTransfer) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type AccountGetViaUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId            string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Ledger            Ledger `protobuf:"varint,2,opt,name=ledger,proto3,enum=transactions.v1.Ledger" json:"ledger,omitempty"`
	CreateIfNotExists bool   `protobuf:"varint,3,opt,name=create_if_not_exists,json=createIfNotExists,proto3" json:"create_if_not_exists,omitempty"`
}

func (x *AccountGetViaUserRequest) Reset() {
	*x = AccountGetViaUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transactions_v1_transactions_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountGetViaUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountGetViaUserRequest) ProtoMessage() {}

func (x *AccountGetViaUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_transactions_v1_transactions_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountGetViaUserRequest.ProtoReflect.Descriptor instead.
func (*AccountGetViaUserRequest) Descriptor() ([]byte, []int) {
	return file_transactions_v1_transactions_proto_rawDescGZIP(), []int{3}
}

func (x *AccountGetViaUserRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AccountGetViaUserRequest) GetLedger() Ledger {
	if x != nil {
		return x.Ledger
	}
	return Ledger_UnusedLedgerCode
}

func (x *AccountGetViaUserRequest) GetCreateIfNotExists() bool {
	if x != nil {
		return x.CreateIfNotExists
	}
	return false
}

type AccountGetViaUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account *Account `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
}

func (x *AccountGetViaUserResponse) Reset() {
	*x = AccountGetViaUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transactions_v1_transactions_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountGetViaUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountGetViaUserResponse) ProtoMessage() {}

func (x *AccountGetViaUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_transactions_v1_transactions_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountGetViaUserResponse.ProtoReflect.Descriptor instead.
func (*AccountGetViaUserResponse) Descriptor() ([]byte, []int) {
	return file_transactions_v1_transactions_proto_rawDescGZIP(), []int{4}
}

func (x *AccountGetViaUserResponse) GetAccount() *Account {
	if x != nil {
		return x.Account
	}
	return nil
}

type AccountsUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId           string   `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	CreateIfNotExist []Ledger `protobuf:"varint,2,rep,packed,name=create_if_not_exist,json=createIfNotExist,proto3,enum=transactions.v1.Ledger" json:"create_if_not_exist,omitempty"`
}

func (x *AccountsUserRequest) Reset() {
	*x = AccountsUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transactions_v1_transactions_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountsUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountsUserRequest) ProtoMessage() {}

func (x *AccountsUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_transactions_v1_transactions_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountsUserRequest.ProtoReflect.Descriptor instead.
func (*AccountsUserRequest) Descriptor() ([]byte, []int) {
	return file_transactions_v1_transactions_proto_rawDescGZIP(), []int{5}
}

func (x *AccountsUserRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AccountsUserRequest) GetCreateIfNotExist() []Ledger {
	if x != nil {
		return x.CreateIfNotExist
	}
	return nil
}

type AccountsUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Accounts []*Account `protobuf:"bytes,1,rep,name=accounts,proto3" json:"accounts,omitempty"`
}

func (x *AccountsUserResponse) Reset() {
	*x = AccountsUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transactions_v1_transactions_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountsUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountsUserResponse) ProtoMessage() {}

func (x *AccountsUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_transactions_v1_transactions_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountsUserResponse.ProtoReflect.Descriptor instead.
func (*AccountsUserResponse) Descriptor() ([]byte, []int) {
	return file_transactions_v1_transactions_proto_rawDescGZIP(), []int{6}
}

func (x *AccountsUserResponse) GetAccounts() []*Account {
	if x != nil {
		return x.Accounts
	}
	return nil
}

type GetBalanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId            string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Ledger            Ledger `protobuf:"varint,2,opt,name=ledger,proto3,enum=transactions.v1.Ledger" json:"ledger,omitempty"`
	CreateIfNotExists bool   `protobuf:"varint,3,opt,name=create_if_not_exists,json=createIfNotExists,proto3" json:"create_if_not_exists,omitempty"`
}

func (x *GetBalanceRequest) Reset() {
	*x = GetBalanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transactions_v1_transactions_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBalanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBalanceRequest) ProtoMessage() {}

func (x *GetBalanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_transactions_v1_transactions_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBalanceRequest.ProtoReflect.Descriptor instead.
func (*GetBalanceRequest) Descriptor() ([]byte, []int) {
	return file_transactions_v1_transactions_proto_rawDescGZIP(), []int{7}
}

func (x *GetBalanceRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetBalanceRequest) GetLedger() Ledger {
	if x != nil {
		return x.Ledger
	}
	return Ledger_UnusedLedgerCode
}

func (x *GetBalanceRequest) GetCreateIfNotExists() bool {
	if x != nil {
		return x.CreateIfNotExists
	}
	return false
}

type GetBalanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Balance string `protobuf:"bytes,1,opt,name=balance,proto3" json:"balance,omitempty"`
}

func (x *GetBalanceResponse) Reset() {
	*x = GetBalanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transactions_v1_transactions_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBalanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBalanceResponse) ProtoMessage() {}

func (x *GetBalanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_transactions_v1_transactions_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBalanceResponse.ProtoReflect.Descriptor instead.
func (*GetBalanceResponse) Descriptor() ([]byte, []int) {
	return file_transactions_v1_transactions_proto_rawDescGZIP(), []int{8}
}

func (x *GetBalanceResponse) GetBalance() string {
	if x != nil {
		return x.Balance
	}
	return ""
}

type TransactionGetByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionId string `protobuf:"bytes,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
}

func (x *TransactionGetByIDRequest) Reset() {
	*x = TransactionGetByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transactions_v1_transactions_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionGetByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionGetByIDRequest) ProtoMessage() {}

func (x *TransactionGetByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_transactions_v1_transactions_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionGetByIDRequest.ProtoReflect.Descriptor instead.
func (*TransactionGetByIDRequest) Descriptor() ([]byte, []int) {
	return file_transactions_v1_transactions_proto_rawDescGZIP(), []int{9}
}

func (x *TransactionGetByIDRequest) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

type TransactionGetByIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Transaction *CompletedTransfer `protobuf:"bytes,1,opt,name=transaction,proto3" json:"transaction,omitempty"`
}

func (x *TransactionGetByIDResponse) Reset() {
	*x = TransactionGetByIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transactions_v1_transactions_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionGetByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionGetByIDResponse) ProtoMessage() {}

func (x *TransactionGetByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_transactions_v1_transactions_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionGetByIDResponse.ProtoReflect.Descriptor instead.
func (*TransactionGetByIDResponse) Descriptor() ([]byte, []int) {
	return file_transactions_v1_transactions_proto_rawDescGZIP(), []int{10}
}

func (x *TransactionGetByIDResponse) GetTransaction() *CompletedTransfer {
	if x != nil {
		return x.Transaction
	}
	return nil
}

type TransactionsGetByAccountIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId string `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Offset    int32  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	PageSize  int32  `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	SortBy    string `protobuf:"bytes,4,opt,name=sort_by,json=sortBy,proto3" json:"sort_by,omitempty"`
	SortDir   string `protobuf:"bytes,5,opt,name=sort_dir,json=sortDir,proto3" json:"sort_dir,omitempty"`
}

func (x *TransactionsGetByAccountIDRequest) Reset() {
	*x = TransactionsGetByAccountIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transactions_v1_transactions_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionsGetByAccountIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionsGetByAccountIDRequest) ProtoMessage() {}

func (x *TransactionsGetByAccountIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_transactions_v1_transactions_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionsGetByAccountIDRequest.ProtoReflect.Descriptor instead.
func (*TransactionsGetByAccountIDRequest) Descriptor() ([]byte, []int) {
	return file_transactions_v1_transactions_proto_rawDescGZIP(), []int{11}
}

func (x *TransactionsGetByAccountIDRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *TransactionsGetByAccountIDRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *TransactionsGetByAccountIDRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *TransactionsGetByAccountIDRequest) GetSortBy() string {
	if x != nil {
		return x.SortBy
	}
	return ""
}

func (x *TransactionsGetByAccountIDRequest) GetSortDir() string {
	if x != nil {
		return x.SortDir
	}
	return ""
}

type TransactionsGetByAccountIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total        int64                `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Transactions []*CompletedTransfer `protobuf:"bytes,2,rep,name=transactions,proto3" json:"transactions,omitempty"`
}

func (x *TransactionsGetByAccountIDResponse) Reset() {
	*x = TransactionsGetByAccountIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transactions_v1_transactions_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionsGetByAccountIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionsGetByAccountIDResponse) ProtoMessage() {}

func (x *TransactionsGetByAccountIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_transactions_v1_transactions_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionsGetByAccountIDResponse.ProtoReflect.Descriptor instead.
func (*TransactionsGetByAccountIDResponse) Descriptor() ([]byte, []int) {
	return file_transactions_v1_transactions_proto_rawDescGZIP(), []int{12}
}

func (x *TransactionsGetByAccountIDResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *TransactionsGetByAccountIDResponse) GetTransactions() []*CompletedTransfer {
	if x != nil {
		return x.Transactions
	}
	return nil
}

type TransactWithIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreditUserId string       `protobuf:"bytes,1,opt,name=credit_user_id,json=creditUserId,proto3" json:"credit_user_id,omitempty"`
	DebitUserId  string       `protobuf:"bytes,2,opt,name=debit_user_id,json=debitUserId,proto3" json:"debit_user_id,omitempty"`
	Code         TransferCode `protobuf:"varint,3,opt,name=code,proto3,enum=transactions.v1.TransferCode" json:"code,omitempty"`
	Ledger       Ledger       `protobuf:"varint,4,opt,name=ledger,proto3,enum=transactions.v1.Ledger" json:"ledger,omitempty"`
	Amount       string       `protobuf:"bytes,5,opt,name=amount,proto3" json:"amount,omitempty"`
	TxId         string       `protobuf:"bytes,6,opt,name=tx_id,json=txId,proto3" json:"tx_id,omitempty"`
}

func (x *TransactWithIDRequest) Reset() {
	*x = TransactWithIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transactions_v1_transactions_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactWithIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactWithIDRequest) ProtoMessage() {}

func (x *TransactWithIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_transactions_v1_transactions_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactWithIDRequest.ProtoReflect.Descriptor instead.
func (*TransactWithIDRequest) Descriptor() ([]byte, []int) {
	return file_transactions_v1_transactions_proto_rawDescGZIP(), []int{13}
}

func (x *TransactWithIDRequest) GetCreditUserId() string {
	if x != nil {
		return x.CreditUserId
	}
	return ""
}

func (x *TransactWithIDRequest) GetDebitUserId() string {
	if x != nil {
		return x.DebitUserId
	}
	return ""
}

func (x *TransactWithIDRequest) GetCode() TransferCode {
	if x != nil {
		return x.Code
	}
	return TransferCode_UnusedTransferCode
}

func (x *TransactWithIDRequest) GetLedger() Ledger {
	if x != nil {
		return x.Ledger
	}
	return Ledger_UnusedLedgerCode
}

func (x *TransactWithIDRequest) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *TransactWithIDRequest) GetTxId() string {
	if x != nil {
		return x.TxId
	}
	return ""
}

type TransactWithIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Transfer *CompletedTransfer `protobuf:"bytes,1,opt,name=transfer,proto3" json:"transfer,omitempty"`
}

func (x *TransactWithIDResponse) Reset() {
	*x = TransactWithIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transactions_v1_transactions_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactWithIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactWithIDResponse) ProtoMessage() {}

func (x *TransactWithIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_transactions_v1_transactions_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactWithIDResponse.ProtoReflect.Descriptor instead.
func (*TransactWithIDResponse) Descriptor() ([]byte, []int) {
	return file_transactions_v1_transactions_proto_rawDescGZIP(), []int{14}
}

func (x *TransactWithIDResponse) GetTransfer() *CompletedTransfer {
	if x != nil {
		return x.Transfer
	}
	return nil
}

type TransactRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreditUserId string       `protobuf:"bytes,1,opt,name=credit_user_id,json=creditUserId,proto3" json:"credit_user_id,omitempty"`
	DebitUserId  string       `protobuf:"bytes,2,opt,name=debit_user_id,json=debitUserId,proto3" json:"debit_user_id,omitempty"`
	Code         TransferCode `protobuf:"varint,3,opt,name=code,proto3,enum=transactions.v1.TransferCode" json:"code,omitempty"`
	Ledger       Ledger       `protobuf:"varint,4,opt,name=ledger,proto3,enum=transactions.v1.Ledger" json:"ledger,omitempty"`
	Amount       string       `protobuf:"bytes,5,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *TransactRequest) Reset() {
	*x = TransactRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transactions_v1_transactions_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactRequest) ProtoMessage() {}

func (x *TransactRequest) ProtoReflect() protoreflect.Message {
	mi := &file_transactions_v1_transactions_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactRequest.ProtoReflect.Descriptor instead.
func (*TransactRequest) Descriptor() ([]byte, []int) {
	return file_transactions_v1_transactions_proto_rawDescGZIP(), []int{15}
}

func (x *TransactRequest) GetCreditUserId() string {
	if x != nil {
		return x.CreditUserId
	}
	return ""
}

func (x *TransactRequest) GetDebitUserId() string {
	if x != nil {
		return x.DebitUserId
	}
	return ""
}

func (x *TransactRequest) GetCode() TransferCode {
	if x != nil {
		return x.Code
	}
	return TransferCode_UnusedTransferCode
}

func (x *TransactRequest) GetLedger() Ledger {
	if x != nil {
		return x.Ledger
	}
	return Ledger_UnusedLedgerCode
}

func (x *TransactRequest) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

type TransactResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Transfer *CompletedTransfer `protobuf:"bytes,1,opt,name=transfer,proto3" json:"transfer,omitempty"`
}

func (x *TransactResponse) Reset() {
	*x = TransactResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transactions_v1_transactions_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactResponse) ProtoMessage() {}

func (x *TransactResponse) ProtoReflect() protoreflect.Message {
	mi := &file_transactions_v1_transactions_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactResponse.ProtoReflect.Descriptor instead.
func (*TransactResponse) Descriptor() ([]byte, []int) {
	return file_transactions_v1_transactions_proto_rawDescGZIP(), []int{16}
}

func (x *TransactResponse) GetTransfer() *CompletedTransfer {
	if x != nil {
		return x.Transfer
	}
	return nil
}

type TransferCompleteSubscribeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *TransferCompleteSubscribeRequest) Reset() {
	*x = TransferCompleteSubscribeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transactions_v1_transactions_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferCompleteSubscribeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferCompleteSubscribeRequest) ProtoMessage() {}

func (x *TransferCompleteSubscribeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_transactions_v1_transactions_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferCompleteSubscribeRequest.ProtoReflect.Descriptor instead.
func (*TransferCompleteSubscribeRequest) Descriptor() ([]byte, []int) {
	return file_transactions_v1_transactions_proto_rawDescGZIP(), []int{17}
}

func (x *TransferCompleteSubscribeRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type TransferCompleteSubscribeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account     *Account           `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	Transaction *CompletedTransfer `protobuf:"bytes,2,opt,name=transaction,proto3" json:"transaction,omitempty"`
}

func (x *TransferCompleteSubscribeResponse) Reset() {
	*x = TransferCompleteSubscribeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transactions_v1_transactions_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferCompleteSubscribeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferCompleteSubscribeResponse) ProtoMessage() {}

func (x *TransferCompleteSubscribeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_transactions_v1_transactions_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferCompleteSubscribeResponse.ProtoReflect.Descriptor instead.
func (*TransferCompleteSubscribeResponse) Descriptor() ([]byte, []int) {
	return file_transactions_v1_transactions_proto_rawDescGZIP(), []int{18}
}

func (x *TransferCompleteSubscribeResponse) GetAccount() *Account {
	if x != nil {
		return x.Account
	}
	return nil
}

func (x *TransferCompleteSubscribeResponse) GetTransaction() *CompletedTransfer {
	if x != nil {
		return x.Transaction
	}
	return nil
}

var File_transactions_v1_transactions_proto protoreflect.FileDescriptor

var file_transactions_v1_transactions_proto_rawDesc = []byte{
	0x0a, 0x22, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76,
	0x31, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x76, 0x31, 0x22, 0x9a, 0x02, 0x0a, 0x07, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x06, 0x6c, 0x65,
	0x64, 0x67, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x64,
	0x67, 0x65, 0x72, 0x52, 0x06, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x12, 0x30, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a,
	0x0d, 0x64, 0x65, 0x62, 0x69, 0x74, 0x73, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x65, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x62, 0x69, 0x74, 0x73, 0x50, 0x6f, 0x73, 0x74,
	0x65, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x73, 0x5f, 0x70, 0x6f,
	0x73, 0x74, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x72, 0x65, 0x64,
	0x69, 0x74, 0x73, 0x50, 0x6f, 0x73, 0x74, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x22, 0xdd, 0x02, 0x0a, 0x11, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x72, 0x65, 0x64,
	0x69, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2a,
	0x0a, 0x11, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x72, 0x65, 0x64, 0x69,
	0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x64, 0x65,
	0x62, 0x69, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x62, 0x69, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x28,
	0x0a, 0x10, 0x64, 0x65, 0x62, 0x69, 0x74, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x65, 0x62, 0x69, 0x74, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x2f, 0x0a, 0x06, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x17, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x52, 0x06, 0x6c, 0x65, 0x64, 0x67, 0x65,
	0x72, 0x12, 0x31, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1d, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x22, 0xdd, 0x02, 0x0a, 0x11, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x72, 0x65, 0x64,
	0x69, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2a,
	0x0a, 0x11, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x72, 0x65, 0x64, 0x69,
	0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x64, 0x65,
	0x62, 0x69, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x62, 0x69, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x28,
	0x0a, 0x10, 0x64, 0x65, 0x62, 0x69, 0x74, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x65, 0x62, 0x69, 0x74, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x2f, 0x0a, 0x06, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x17, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x52, 0x06, 0x6c, 0x65, 0x64, 0x67, 0x65,
	0x72, 0x12, 0x31, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1d, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x22, 0x95, 0x01, 0x0a, 0x18, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x47, 0x65,
	0x74, 0x56, 0x69, 0x61, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x06, 0x6c, 0x65, 0x64, 0x67,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x64, 0x67, 0x65,
	0x72, 0x52, 0x06, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x12, 0x2f, 0x0a, 0x14, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x5f, 0x69, 0x66, 0x5f, 0x6e, 0x6f, 0x74, 0x5f, 0x65, 0x78, 0x69, 0x73, 0x74,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49,
	0x66, 0x4e, 0x6f, 0x74, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x22, 0x4f, 0x0a, 0x19, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x47, 0x65, 0x74, 0x56, 0x69, 0x61, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x76, 0x0a, 0x13, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x46, 0x0a, 0x13, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x66, 0x5f, 0x6e, 0x6f, 0x74, 0x5f, 0x65, 0x78, 0x69,
	0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x64, 0x67, 0x65,
	0x72, 0x52, 0x10, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x66, 0x4e, 0x6f, 0x74, 0x45, 0x78,
	0x69, 0x73, 0x74, 0x22, 0x4c, 0x0a, 0x14, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x08, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x08, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x73, 0x22, 0x8e, 0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x2f, 0x0a, 0x06, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x17, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x52, 0x06, 0x6c, 0x65, 0x64, 0x67, 0x65,
	0x72, 0x12, 0x2f, 0x0a, 0x14, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x66, 0x5f, 0x6e,
	0x6f, 0x74, 0x5f, 0x65, 0x78, 0x69, 0x73, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x11, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x66, 0x4e, 0x6f, 0x74, 0x45, 0x78, 0x69, 0x73,
	0x74, 0x73, 0x22, 0x2e, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x22, 0x42, 0x0a, 0x19, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x25, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x62, 0x0a, 0x1a, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x0b, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xab, 0x01, 0x0a, 0x21, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x47, 0x65, 0x74, 0x42, 0x79,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x62, 0x79, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x12, 0x19, 0x0a,
	0x08, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x64, 0x69, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x73, 0x6f, 0x72, 0x74, 0x44, 0x69, 0x72, 0x22, 0x82, 0x01, 0x0a, 0x22, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x47, 0x65, 0x74, 0x42, 0x79, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x46, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52,
	0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xf2, 0x01,
	0x0a, 0x15, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x57, 0x69, 0x74, 0x68, 0x49, 0x44,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x72, 0x65, 0x64, 0x69,
	0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x22, 0x0a,
	0x0d, 0x64, 0x65, 0x62, 0x69, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x62, 0x69, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x31, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1d, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x52, 0x06, 0x6c,
	0x65, 0x64, 0x67, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x13, 0x0a,
	0x05, 0x74, 0x78, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x78,
	0x49, 0x64, 0x22, 0x58, 0x0a, 0x16, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x57, 0x69,
	0x74, 0x68, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x08,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x65, 0x72, 0x52, 0x08, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x22, 0xd7, 0x01, 0x0a,
	0x0f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x24, 0x0a, 0x0e, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x64, 0x65, 0x62, 0x69, 0x74, 0x5f,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x62, 0x69, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x2f, 0x0a,
	0x06, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x52, 0x06, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x52, 0x0a, 0x10, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x08, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72,
	0x52, 0x08, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x22, 0x32, 0x0a, 0x20, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x9d,
	0x01, 0x0a, 0x21, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x74, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x44, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2a, 0x94,
	0x07, 0x0a, 0x0c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x16, 0x0a, 0x12, 0x55, 0x6e, 0x75, 0x73, 0x65, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x43, 0x6f, 0x64, 0x65, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x6e, 0x6b, 0x6e, 0x6f,
	0x77, 0x6e, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x10, 0x02,
	0x12, 0x0b, 0x0a, 0x07, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x10, 0x03, 0x12, 0x11, 0x0a,
	0x0d, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x10, 0x04,
	0x12, 0x0c, 0x0a, 0x08, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x10, 0x05, 0x12, 0x12,
	0x0a, 0x0e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64,
	0x10, 0x06, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x75, 0x70, 0x73, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61,
	0x73, 0x65, 0x10, 0x07, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x75, 0x70, 0x73, 0x50, 0x75, 0x72, 0x63,
	0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x10, 0x08, 0x12, 0x11, 0x0a, 0x0d,
	0x53, 0x74, 0x6f, 0x72, 0x65, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x10, 0x09, 0x12,
	0x17, 0x0a, 0x13, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65,
	0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x10, 0x0a, 0x12, 0x14, 0x0a, 0x10, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x46, 0x65, 0x65, 0x10, 0x0b, 0x12, 0x1a,
	0x0a, 0x16, 0x41, 0x73, 0x73, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x46,
	0x65, 0x65, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x10, 0x0c, 0x12, 0x1a, 0x0a, 0x16, 0x53, 0x75,
	0x70, 0x72, 0x65, 0x6d, 0x61, 0x63, 0x79, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x50, 0x75, 0x72, 0x63,
	0x68, 0x61, 0x73, 0x65, 0x10, 0x0d, 0x12, 0x18, 0x0a, 0x14, 0x53, 0x75, 0x70, 0x72, 0x65, 0x6d,
	0x61, 0x63, 0x79, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x10, 0x0e,
	0x12, 0x18, 0x0a, 0x14, 0x53, 0x75, 0x70, 0x72, 0x65, 0x6d, 0x61, 0x63, 0x79, 0x4d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x10, 0x0f, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x75,
	0x70, 0x72, 0x65, 0x6d, 0x61, 0x63, 0x79, 0x53, 0x79, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65,
	0x10, 0x10, 0x12, 0x1c, 0x0a, 0x18, 0x53, 0x75, 0x70, 0x72, 0x65, 0x6d, 0x61, 0x63, 0x79, 0x53,
	0x79, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x10, 0x11,
	0x12, 0x13, 0x0a, 0x0f, 0x53, 0x75, 0x70, 0x72, 0x65, 0x6d, 0x61, 0x63, 0x79, 0x42, 0x61, 0x74,
	0x74, 0x6c, 0x65, 0x10, 0x12, 0x12, 0x19, 0x0a, 0x15, 0x53, 0x75, 0x70, 0x72, 0x65, 0x6d, 0x61,
	0x63, 0x79, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x10, 0x13,
	0x12, 0x19, 0x0a, 0x15, 0x53, 0x75, 0x70, 0x72, 0x65, 0x6d, 0x61, 0x63, 0x79, 0x42, 0x61, 0x74,
	0x74, 0x6c, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x10, 0x14, 0x12, 0x1b, 0x0a, 0x17, 0x53,
	0x75, 0x70, 0x72, 0x65, 0x6d, 0x61, 0x63, 0x79, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x4c, 0x6f,
	0x62, 0x62, 0x79, 0x46, 0x65, 0x65, 0x10, 0x15, 0x12, 0x21, 0x0a, 0x1d, 0x53, 0x75, 0x70, 0x72,
	0x65, 0x6d, 0x61, 0x63, 0x79, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x4c, 0x6f, 0x62, 0x62, 0x79,
	0x46, 0x65, 0x65, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x10, 0x16, 0x12, 0x1c, 0x0a, 0x18, 0x53,
	0x75, 0x70, 0x72, 0x65, 0x6d, 0x61, 0x63, 0x79, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x4c, 0x6f,
	0x62, 0x62, 0x79, 0x4a, 0x6f, 0x69, 0x6e, 0x10, 0x17, 0x12, 0x22, 0x0a, 0x1e, 0x53, 0x75, 0x70,
	0x72, 0x65, 0x6d, 0x61, 0x63, 0x79, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x4c, 0x6f, 0x62, 0x62,
	0x79, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x10, 0x18, 0x12, 0x0a, 0x0a,
	0x06, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x10, 0x19, 0x12, 0x1b, 0x0a, 0x17, 0x53, 0x75, 0x70,
	0x72, 0x65, 0x6d, 0x61, 0x63, 0x79, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x70, 0x6c, 0x61, 0x63,
	0x65, 0x42, 0x75, 0x79, 0x10, 0x1a, 0x12, 0x21, 0x0a, 0x1d, 0x53, 0x75, 0x70, 0x72, 0x65, 0x6d,
	0x61, 0x63, 0x79, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x42, 0x75,
	0x79, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x10, 0x1b, 0x12, 0x1b, 0x0a, 0x17, 0x53, 0x75, 0x70,
	0x72, 0x65, 0x6d, 0x61, 0x63, 0x79, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x70, 0x6c, 0x61, 0x63,
	0x65, 0x42, 0x69, 0x64, 0x10, 0x1c, 0x12, 0x21, 0x0a, 0x1d, 0x53, 0x75, 0x70, 0x72, 0x65, 0x6d,
	0x61, 0x63, 0x79, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x42, 0x69,
	0x64, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x10, 0x1d, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x75, 0x70,
	0x72, 0x65, 0x6d, 0x61, 0x63, 0x79, 0x52, 0x65, 0x70, 0x61, 0x69, 0x72, 0x10, 0x1e, 0x12, 0x19,
	0x0a, 0x15, 0x53, 0x75, 0x70, 0x72, 0x65, 0x6d, 0x61, 0x63, 0x79, 0x52, 0x65, 0x70, 0x61, 0x69,
	0x72, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x10, 0x1f, 0x12, 0x19, 0x0a, 0x15, 0x53, 0x75, 0x70,
	0x72, 0x65, 0x6d, 0x61, 0x63, 0x79, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x10, 0x20, 0x12, 0x1f, 0x0a, 0x1b, 0x53, 0x75, 0x70, 0x72, 0x65, 0x6d, 0x61, 0x63,
	0x79, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x66,
	0x75, 0x6e, 0x64, 0x10, 0x21, 0x12, 0x1b, 0x0a, 0x17, 0x53, 0x75, 0x70, 0x72, 0x65, 0x6d, 0x61,
	0x63, 0x79, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x46, 0x65, 0x65,
	0x10, 0x22, 0x12, 0x21, 0x0a, 0x1d, 0x53, 0x75, 0x70, 0x72, 0x65, 0x6d, 0x61, 0x63, 0x79, 0x4d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x46, 0x65, 0x65, 0x52, 0x65, 0x66,
	0x75, 0x6e, 0x64, 0x10, 0x23, 0x2a, 0x28, 0x0a, 0x06, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x12,
	0x14, 0x0a, 0x10, 0x55, 0x6e, 0x75, 0x73, 0x65, 0x64, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x43,
	0x6f, 0x64, 0x65, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x53, 0x55, 0x50, 0x53, 0x10, 0x01, 0x2a,
	0x69, 0x0a, 0x0b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12,
	0x0a, 0x0e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e,
	0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x10, 0x03, 0x12, 0x0e, 0x0a, 0x0a, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x6f, 0x74, 0x10, 0x04, 0x32, 0xa1, 0x04, 0x0a, 0x08, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x6a, 0x0a, 0x11, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x47, 0x65, 0x74, 0x56, 0x69, 0x61, 0x55, 0x73, 0x65, 0x72, 0x12, 0x29, 0x2e, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x47, 0x65, 0x74, 0x56, 0x69, 0x61, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x47, 0x65, 0x74, 0x56, 0x69, 0x61, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x5b, 0x0a, 0x0c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x55,
	0x73, 0x65, 0x72, 0x12, 0x24, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x73, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x55, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x22,
	0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x23, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6d, 0x0a, 0x12, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x44, 0x12, 0x2a, 0x2e,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x65, 0x74, 0x42, 0x79,
	0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x85, 0x01, 0x0a, 0x1a, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x47, 0x65, 0x74, 0x42, 0x79, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x32, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x47, 0x65, 0x74, 0x42, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x47, 0x65, 0x74, 0x42, 0x79, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xc9,
	0x02, 0x0a, 0x0a, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x61, 0x0a,
	0x0e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x57, 0x69, 0x74, 0x68, 0x49, 0x44, 0x12,
	0x26, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x57, 0x69, 0x74, 0x68, 0x49, 0x44,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x57, 0x69, 0x74, 0x68, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x4f, 0x0a, 0x08, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x12, 0x20, 0x2e, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21,
	0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x86, 0x01, 0x0a, 0x19, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x43, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12,
	0x31, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65,
	0x74, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x32, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x43, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x42, 0x36, 0x5a, 0x34, 0x78, 0x73,
	0x79, 0x6e, 0x2d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f,
	0x67, 0x65, 0x6e, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2f, 0x76, 0x31, 0x3b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_transactions_v1_transactions_proto_rawDescOnce sync.Once
	file_transactions_v1_transactions_proto_rawDescData = file_transactions_v1_transactions_proto_rawDesc
)

func file_transactions_v1_transactions_proto_rawDescGZIP() []byte {
	file_transactions_v1_transactions_proto_rawDescOnce.Do(func() {
		file_transactions_v1_transactions_proto_rawDescData = protoimpl.X.CompressGZIP(file_transactions_v1_transactions_proto_rawDescData)
	})
	return file_transactions_v1_transactions_proto_rawDescData
}

var file_transactions_v1_transactions_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_transactions_v1_transactions_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_transactions_v1_transactions_proto_goTypes = []interface{}{
	(TransferCode)(0),                          // 0: transactions.v1.TransferCode
	(Ledger)(0),                                // 1: transactions.v1.Ledger
	(AccountCode)(0),                           // 2: transactions.v1.AccountCode
	(*Account)(nil),                            // 3: transactions.v1.Account
	(*MigrationTransfer)(nil),                  // 4: transactions.v1.MigrationTransfer
	(*CompletedTransfer)(nil),                  // 5: transactions.v1.CompletedTransfer
	(*AccountGetViaUserRequest)(nil),           // 6: transactions.v1.AccountGetViaUserRequest
	(*AccountGetViaUserResponse)(nil),          // 7: transactions.v1.AccountGetViaUserResponse
	(*AccountsUserRequest)(nil),                // 8: transactions.v1.AccountsUserRequest
	(*AccountsUserResponse)(nil),               // 9: transactions.v1.AccountsUserResponse
	(*GetBalanceRequest)(nil),                  // 10: transactions.v1.GetBalanceRequest
	(*GetBalanceResponse)(nil),                 // 11: transactions.v1.GetBalanceResponse
	(*TransactionGetByIDRequest)(nil),          // 12: transactions.v1.TransactionGetByIDRequest
	(*TransactionGetByIDResponse)(nil),         // 13: transactions.v1.TransactionGetByIDResponse
	(*TransactionsGetByAccountIDRequest)(nil),  // 14: transactions.v1.TransactionsGetByAccountIDRequest
	(*TransactionsGetByAccountIDResponse)(nil), // 15: transactions.v1.TransactionsGetByAccountIDResponse
	(*TransactWithIDRequest)(nil),              // 16: transactions.v1.TransactWithIDRequest
	(*TransactWithIDResponse)(nil),             // 17: transactions.v1.TransactWithIDResponse
	(*TransactRequest)(nil),                    // 18: transactions.v1.TransactRequest
	(*TransactResponse)(nil),                   // 19: transactions.v1.TransactResponse
	(*TransferCompleteSubscribeRequest)(nil),   // 20: transactions.v1.TransferCompleteSubscribeRequest
	(*TransferCompleteSubscribeResponse)(nil),  // 21: transactions.v1.TransferCompleteSubscribeResponse
}
var file_transactions_v1_transactions_proto_depIdxs = []int32{
	1,  // 0: transactions.v1.Account.ledger:type_name -> transactions.v1.Ledger
	2,  // 1: transactions.v1.Account.code:type_name -> transactions.v1.AccountCode
	1,  // 2: transactions.v1.MigrationTransfer.ledger:type_name -> transactions.v1.Ledger
	0,  // 3: transactions.v1.MigrationTransfer.code:type_name -> transactions.v1.TransferCode
	1,  // 4: transactions.v1.CompletedTransfer.ledger:type_name -> transactions.v1.Ledger
	0,  // 5: transactions.v1.CompletedTransfer.code:type_name -> transactions.v1.TransferCode
	1,  // 6: transactions.v1.AccountGetViaUserRequest.ledger:type_name -> transactions.v1.Ledger
	3,  // 7: transactions.v1.AccountGetViaUserResponse.account:type_name -> transactions.v1.Account
	1,  // 8: transactions.v1.AccountsUserRequest.create_if_not_exist:type_name -> transactions.v1.Ledger
	3,  // 9: transactions.v1.AccountsUserResponse.accounts:type_name -> transactions.v1.Account
	1,  // 10: transactions.v1.GetBalanceRequest.ledger:type_name -> transactions.v1.Ledger
	5,  // 11: transactions.v1.TransactionGetByIDResponse.transaction:type_name -> transactions.v1.CompletedTransfer
	5,  // 12: transactions.v1.TransactionsGetByAccountIDResponse.transactions:type_name -> transactions.v1.CompletedTransfer
	0,  // 13: transactions.v1.TransactWithIDRequest.code:type_name -> transactions.v1.TransferCode
	1,  // 14: transactions.v1.TransactWithIDRequest.ledger:type_name -> transactions.v1.Ledger
	5,  // 15: transactions.v1.TransactWithIDResponse.transfer:type_name -> transactions.v1.CompletedTransfer
	0,  // 16: transactions.v1.TransactRequest.code:type_name -> transactions.v1.TransferCode
	1,  // 17: transactions.v1.TransactRequest.ledger:type_name -> transactions.v1.Ledger
	5,  // 18: transactions.v1.TransactResponse.transfer:type_name -> transactions.v1.CompletedTransfer
	3,  // 19: transactions.v1.TransferCompleteSubscribeResponse.account:type_name -> transactions.v1.Account
	5,  // 20: transactions.v1.TransferCompleteSubscribeResponse.transaction:type_name -> transactions.v1.CompletedTransfer
	6,  // 21: transactions.v1.Accounts.AccountGetViaUser:input_type -> transactions.v1.AccountGetViaUserRequest
	8,  // 22: transactions.v1.Accounts.AccountsUser:input_type -> transactions.v1.AccountsUserRequest
	10, // 23: transactions.v1.Accounts.GetBalance:input_type -> transactions.v1.GetBalanceRequest
	12, // 24: transactions.v1.Accounts.TransactionGetByID:input_type -> transactions.v1.TransactionGetByIDRequest
	14, // 25: transactions.v1.Accounts.TransactionsGetByAccountID:input_type -> transactions.v1.TransactionsGetByAccountIDRequest
	16, // 26: transactions.v1.Transactor.TransactWithID:input_type -> transactions.v1.TransactWithIDRequest
	18, // 27: transactions.v1.Transactor.Transact:input_type -> transactions.v1.TransactRequest
	20, // 28: transactions.v1.Transactor.TransferCompleteSubscribe:input_type -> transactions.v1.TransferCompleteSubscribeRequest
	7,  // 29: transactions.v1.Accounts.AccountGetViaUser:output_type -> transactions.v1.AccountGetViaUserResponse
	9,  // 30: transactions.v1.Accounts.AccountsUser:output_type -> transactions.v1.AccountsUserResponse
	11, // 31: transactions.v1.Accounts.GetBalance:output_type -> transactions.v1.GetBalanceResponse
	13, // 32: transactions.v1.Accounts.TransactionGetByID:output_type -> transactions.v1.TransactionGetByIDResponse
	15, // 33: transactions.v1.Accounts.TransactionsGetByAccountID:output_type -> transactions.v1.TransactionsGetByAccountIDResponse
	17, // 34: transactions.v1.Transactor.TransactWithID:output_type -> transactions.v1.TransactWithIDResponse
	19, // 35: transactions.v1.Transactor.Transact:output_type -> transactions.v1.TransactResponse
	21, // 36: transactions.v1.Transactor.TransferCompleteSubscribe:output_type -> transactions.v1.TransferCompleteSubscribeResponse
	29, // [29:37] is the sub-list for method output_type
	21, // [21:29] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_transactions_v1_transactions_proto_init() }
func file_transactions_v1_transactions_proto_init() {
	if File_transactions_v1_transactions_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_transactions_v1_transactions_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Account); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transactions_v1_transactions_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MigrationTransfer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transactions_v1_transactions_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompletedTransfer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transactions_v1_transactions_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountGetViaUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transactions_v1_transactions_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountGetViaUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transactions_v1_transactions_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountsUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transactions_v1_transactions_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountsUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transactions_v1_transactions_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBalanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transactions_v1_transactions_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBalanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transactions_v1_transactions_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionGetByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transactions_v1_transactions_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionGetByIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transactions_v1_transactions_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionsGetByAccountIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transactions_v1_transactions_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionsGetByAccountIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transactions_v1_transactions_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactWithIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transactions_v1_transactions_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactWithIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transactions_v1_transactions_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transactions_v1_transactions_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transactions_v1_transactions_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferCompleteSubscribeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transactions_v1_transactions_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferCompleteSubscribeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_transactions_v1_transactions_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_transactions_v1_transactions_proto_goTypes,
		DependencyIndexes: file_transactions_v1_transactions_proto_depIdxs,
		EnumInfos:         file_transactions_v1_transactions_proto_enumTypes,
		MessageInfos:      file_transactions_v1_transactions_proto_msgTypes,
	}.Build()
	File_transactions_v1_transactions_proto = out.File
	file_transactions_v1_transactions_proto_rawDesc = nil
	file_transactions_v1_transactions_proto_goTypes = nil
	file_transactions_v1_transactions_proto_depIdxs = nil
}
